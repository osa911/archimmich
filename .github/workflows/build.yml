name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags
  pull_request:
    branches: [master, main] # Trigger on PRs to master or main
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: ArchImmich-linux
            build_script: ./scripts/build-linux.sh
          - os: windows-latest
            artifact_name: ArchImmich-windows
            build_script: scripts/build-windows.sh
          - os: macos-latest
            artifact_name: ArchImmich-macos
            build_script: ./scripts/build-macos.sh

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev qtbase5-dev qttools5-dev-tools libqt5gui5 libqt5widgets5 libqt5core5a

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Make scripts executable
        if: runner.os != 'Windows'
        run: |
          chmod +x scripts/*.sh

      - name: Build Application
        run: ${{ matrix.build_script }}
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        working-directory: ${{ github.workspace }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ArchImmich-*/ArchImmich_*
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
