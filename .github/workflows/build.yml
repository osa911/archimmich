name: Build and Release

on:
  push:
    tags:
      - "v*" # Trigger on version tags
  pull_request:
    branches: [master, main] # Trigger on PRs to master or main
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Make scripts executable
        run: |
          chmod +x scripts/*.sh
      - name: Run tests
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          ./scripts/run-tests.sh

  build:
    needs: test
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            runner: ubuntu-latest
            artifact_name: ArchImmich-linux-x64
            build_script: ./scripts/build-linux.sh
          - os: ubuntu-latest
            arch: arm64
            runner: ubuntu-arm64
            artifact_name: ArchImmich-linux-arm64
            build_script: ./scripts/build-linux.sh
          - os: windows-latest
            arch: x64
            runner: windows-latest
            artifact_name: ArchImmich-windows
            build_script: scripts\build-windows.bat
          - os: macos-latest
            arch: arm64
            runner: macos-latest
            artifact_name: ArchImmich-macos
            build_script: ./scripts/build-macos.sh

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev qtbase5-dev qttools5-dev-tools libqt5gui5 libqt5widgets5 libqt5core5a xvfb
          # Start Xvfb for headless GUI testing
          sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99.0" >> $GITHUB_ENV

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install create-dmg

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Make scripts executable
        if: runner.os != 'Windows'
        run: |
          chmod +x scripts/*.sh

      - name: Build Application (Windows)
        if: matrix.os == 'windows-latest'
        run: ${{ matrix.build_script }}
        shell: cmd
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Build Application (Unix)
        if: matrix.os != 'windows-latest'
        run: ${{ matrix.build_script }}
        shell: bash
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          TARGET_ARCH: ${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # This gives permission to create releases and upload assets

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ArchImmich-*/ArchImmich_*
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
